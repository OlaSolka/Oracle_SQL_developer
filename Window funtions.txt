This query shows how the number of employees developed in particular years as well as the incremental values ​​of the number of employees in total for each year.

select
extract(year from hire_date) year,
count(extract(year from hire_date)) employments,
sum(count(*)) over (order by extract(year from hire_date) ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) accumulative
from employees
group by extract(year from hire_date)
\

This query returns what full-time positions the employees were hired for. 

select
extract(year from hire_date) year,
job_title,
count(job_title) employments,
sum(count(*)) over (order by extract(year from hire_date), job_title ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) accumulative
from employees e join jobs j using(job_id)
group by job_title, extract(year from hire_date)
\

This query returns how much we spend in total for each position. The next column is the share percentage
individual employee in full-time expenses. Sorted by the job_title.

select
first_name, 
last_name,
job_title, 
salary, 
sum(salary) over (order by job_title) sum,
round(salary/(sum(salary) over (order by job_title))*100,2)||'%' percent
from employees e join jobs j using(job_id)
\

This query returns first_name, last_name, hire_date and the name of the previously employed employee
taking into account the date of employment.

select
first_name,
last_name,
hire_date,
lag(first_name||' '||last_name,1,'----') over (order by hire_date ) predecessor
from
employees
\

This query returns last_name of employees employed in particular positions.

select
job_title,
listagg(last_name,',') surnames
from employees e join jobs j using(job_id)
group by job_title
order by job_title
\

This query returns highest paid employee in each country.

select 
distinct country_name,
first_value(first_name||' '||last_name||' '||salary) over (partition by country_name order by salary desc) top1
from employees e join departments d using(department_id) join locations l using(location_id) right join countries c using(country_id)
order by top1 desc 
\

This query returns salary increase in the following quarters.

select
extract(year from hire_date) year,
to_char(hire_date, 'Q') quarter,
sum(sum(salary)) over (order by extract(year from hire_date), to_char(hire_date, 'Q') ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) sum
from employees
group by extract(year from hire_date), to_char(hire_date, 'Q')
order by year
\

This query returns which quarters, regardless of the year, generated more employment and the difference between the quarters.

select 
to_char(hire_date, 'Q') quarter,
count(hire_date) employments,
lag(count(hire_date)) over (order by to_char(hire_date, 'Q')) predecessor,
(lag(count(hire_date)) over (order by to_char(hire_date, 'Q')))- (count(hire_date)) diff,
rank() over (order by count(hire_date) desc) ranking
from employees
group by to_char(hire_date, 'Q')
order by quarter






















